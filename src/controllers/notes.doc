User Controller
async is to await file uploads during registeration of a user
one function can send only 1 response
if we send response here, only that response will be sent

res.status(200).json({ message: "ok" }); // testing of "/register" route

- below is a simpler but more expensive operation

if(await User.findOne({ username })) {
    throw new ApiError(409, "username already exists");
}
else if(await User.findOne({ email })) {
    throw new ApiError(409, "email already exists");
}

const converImageLocalPath = req.files?.coverImage[0]?.path;

extra db call, but is a fool-proof method
1. checking whether newUser has been created
2. removing password and refreshToken from the document

Login User
1. req.body -> data
2. find whether user/email exists
3. check password
4. if password matches, generate access token and refresh token and provide to the user
5. send these tokens through (secure) cookies
-> these tokens are saved in cookies in the browser so that the user does not have
to enter password everytime they login

unoptimized way
let user = await User.findOne({username: usernameOrEmail});
if(!user) {
    user = await User.findOne({email: usernameOrEmail});
    if(!user) {
        throw new ApiError(400, "no username or email found");
    }
}

/*
    In Logout method
    username => req.body
    User.findOne({}) // how do i find user, there is no form at logout
    
    sol.

    First of all, we need to check whether a user is logged in or not,
    to be able to logout the user.

    --> 2 options currently available:
    1. verify the user in logout function
    2. verify the user in a seperate middleware

    The 2nd option is best for our use case as we will need to verify the user at a lot of places,
    For eg. when a user likes, comments, subscribes etc. wherever the user tries to show
    their identity.

*/